/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {

        if(head==nullptr)return nullptr;
       
       if(head->next == nullptr)return head;
        vector<int>v;
        ListNode*temp = head;
        while(temp != nullptr)
        {
            v.push_back(temp->val);
            temp = temp->next;
        }
        temp = head;
        int sz = v.size();
        k = k % sz;
        reverse(v.begin() , v.end());
        reverse(v.begin(),v.begin()+k);
        reverse(v.begin()+k,v.end());
        int x = 0;
        while(temp!=nullptr)
        {
            temp->val = v[x];
            x++;
            temp = temp->next;
        }
        return head;
    }
};
